@use '../base' as *;

/* -------------------------------- 

File#: _1_auto-sized-grid
Title: Auto Sized Grid
Descr: A grid layout based on CSS Grid where the columns are automatically created according to a min-width value
Usage: codyhouse.co/license

-------------------------------- */

/* #region (if CodyFrame >= 3 ðŸ‘‡) */
.grid-auto-xs, .grid-auto-sm, .grid-auto-md, .grid-auto-lg, .grid-auto-xl {
  display: grid;
  gap: var(--gap-y, 0px) var(--gap-x, 0px);
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr)); // auto add new cols
}

.grid-auto-xs { --col-min-width: 8rem; }
.grid-auto-sm { --col-min-width: 10rem; }
.grid-auto-md { --col-min-width: 15rem; }
.grid-auto-lg { --col-min-width: 20rem; }
.grid-auto-xl { --col-min-width: 25rem; }

@each $breakpoint, $value in $breakpoints { 
  @include breakpoint(#{$breakpoint}) {
    .grid-auto-xs\@#{$breakpoint} { --col-min-width: 8rem; }
    .grid-auto-sm\@#{$breakpoint} { --col-min-width: 10rem; }
    .grid-auto-md\@#{$breakpoint} { --col-min-width: 15rem; }
    .grid-auto-lg\@#{$breakpoint} { --col-min-width: 20rem; }
    .grid-auto-xl\@#{$breakpoint} { --col-min-width: 25rem; }
  }
}
/* #endregion */

/* #region (if 2.8.1 <= CodyFrame < 3 ðŸ‘‡) */
// .grid-auto-xs, .grid-auto-sm, .grid-auto-md, .grid-auto-lg, .grid-auto-xl {
//   display: grid;
//   row-gap: var(--gap-y, 0px);
//   column-gap: var(--gap-x, 0px);
//   grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
// }

// .grid-auto-xs { --col-min-width: 8rem; }
// .grid-auto-sm { --col-min-width: 10rem; }
// .grid-auto-md { --col-min-width: 15rem; }
// .grid-auto-lg { --col-min-width: 20rem; }
// .grid-auto-xl { --col-min-width: 25rem; }

// @each $breakpoint, $value in $breakpoints { 
//   @include breakpoint(#{$breakpoint}) {
//     .grid-auto-xs\@#{$breakpoint} { --col-min-width: 8rem; }
//     .grid-auto-sm\@#{$breakpoint} { --col-min-width: 10rem; }
//     .grid-auto-md\@#{$breakpoint} { --col-min-width: 15rem; }
//     .grid-auto-lg\@#{$breakpoint} { --col-min-width: 20rem; }
//     .grid-auto-xl\@#{$breakpoint} { --col-min-width: 25rem; }
//   }
// }

// // make gaps compatible with CodyFrame grid system
// [class*="grid-auto-"][class*="gap-xxxxs"], [class*="grid-auto-"][class*="gap-xxxs"], [class*="grid-auto-"][class*="gap-xxs"], [class*="grid-auto-"][class*="gap-xs"], [class*="grid-auto-"][class*="gap-sm"], [class*="grid-auto-"][class*="gap-md"], [class*="grid-auto-"][class*="gap-lg"], [class*="grid-auto-"][class*="gap-xl"], [class*="grid-auto-"][class*="gap-xxl"], [class*="grid-auto-"][class*="gap-xxxl"], [class*="grid-auto-"][class*="gap-xxxxl"], [class*="grid-auto-"][class*="grid-gap-"], [class*="grid-auto-"][class*="flex-gap-"], [class*="grid-auto-"][class*="gap-x-xxxxs"], [class*="grid-auto-"][class*="gap-x-xxxs"], [class*="grid-auto-"][class*="gap-x-xxs"], [class*="grid-auto-"][class*="gap-x-xs"], [class*="grid-auto-"][class*="gap-x-sm"], [class*="grid-auto-"][class*="gap-x-md"], [class*="grid-auto-"][class*="gap-x-lg"], [class*="grid-auto-"][class*="gap-x-xl"], [class*="grid-auto-"][class*="gap-x-xxl"], [class*="grid-auto-"][class*="gap-x-xxxl"], [class*="grid-auto-"][class*="gap-x-xxxxl"], [class*="grid-auto-"][class*="gap-y-xxxxs"], [class*="grid-auto-"][class*="gap-y-xxxs"], [class*="grid-auto-"][class*="gap-y-xxs"], [class*="grid-auto-"][class*="gap-y-xs"], [class*="grid-auto-"][class*="gap-y-sm"], [class*="grid-auto-"][class*="gap-y-md"], [class*="grid-auto-"][class*="gap-y-lg"], [class*="grid-auto-"][class*="gap-y-xl"], [class*="grid-auto-"][class*="gap-y-xxl"], [class*="grid-auto-"][class*="gap-y-xxxl"], [class*="grid-auto-"][class*="gap-y-xxxxl"] {
//   margin: 0 !important;

//   > * {
//     margin: 0 !important;
//   }
// }
/* #endregion */

/* #region (if CodyFrame < 2.8.1 ðŸ‘‡) */
// .grid-auto-xs, .grid-auto-sm, .grid-auto-md, .grid-auto-lg, .grid-auto-xl {
//   display: grid;
//   grid-gap: var(--gap, 0);
//   grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
// }

// .grid-auto-xs { --col-min-width: 8rem; }
// .grid-auto-sm { --col-min-width: 10rem; }
// .grid-auto-md { --col-min-width: 15rem; }
// .grid-auto-lg { --col-min-width: 20rem; }
// .grid-auto-xl { --col-min-width: 25rem; }

// @each $breakpoint, $value in $breakpoints { 
//   @include breakpoint(#{$breakpoint}) {
//     .grid-auto-xs\@#{$breakpoint} { --col-min-width: 8rem; }
//     .grid-auto-sm\@#{$breakpoint} { --col-min-width: 10rem; }
//     .grid-auto-md\@#{$breakpoint} { --col-min-width: 15rem; }
//     .grid-auto-lg\@#{$breakpoint} { --col-min-width: 20rem; }
//     .grid-auto-xl\@#{$breakpoint} { --col-min-width: 25rem; }
//   }
// }

// // make gaps compatible with CodyFrame grid system
// [class*="grid-auto-"][class*="gap-xxxxs"], [class*="grid-auto-"][class*="gap-xxxs"], [class*="grid-auto-"][class*="gap-xxs"], [class*="grid-auto-"][class*="gap-xs"], [class*="grid-auto-"][class*="gap-sm"], [class*="grid-auto-"][class*="gap-md"], [class*="grid-auto-"][class*="gap-lg"], [class*="grid-auto-"][class*="gap-xl"], [class*="grid-auto-"][class*="gap-xxl"], [class*="grid-auto-"][class*="gap-xxxl"], [class*="grid-auto-"][class*="gap-xxxxl"], [class*="grid-auto-"][class*="grid-gap-"], [class*="grid-auto-"][class*="flex-gap-"] {
//   margin: 0;

//   > * {
//     margin: 0;
//   }
// }
/* #endregion */